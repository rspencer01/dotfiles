au BufReadPost,BufNewFile *.lean set filetype=lean
au BufReadPost,BufNewFile *.lean imap \f< ‹
au BufReadPost,BufNewFile *.lean imap \f> ›
au BufReadPost,BufNewFile *.lean imap \nat ℕ
au BufReadPost,BufNewFile *.lean imap \int ℤ
au BufReadPost,BufNewFile *.lean imap \to →
au BufReadPost,BufNewFile *.lean imap \iff ↔
au BufReadPost,BufNewFile *.lean imap \forall ∀
au BufReadPost,BufNewFile *.lean imap \exists ∃
au BufReadPost,BufNewFile *.lean imap \nexists ∄
au BufReadPost,BufNewFile *.lean imap \le ≤
au BufReadPost,BufNewFile *.lean imap \ge ≥
au BufReadPost,BufNewFile *.lean imap \neq ≠
au BufReadPost,BufNewFile *.lean imap \alpha α
au BufReadPost,BufNewFile *.lean imap \beta β
au BufReadPost,BufNewFile *.lean imap \gamma γ
au BufReadPost,BufNewFile *.lean imap \lambda λ
au BufReadPost,BufNewFile *.lean imap \Gamma Γ

au BufReadPost,BufNewFile *.lean imap \and ∧
au BufReadPost,BufNewFile *.lean imap \or ∨
au BufReadPost,BufNewFile *.lean imap \< ⟨
au BufReadPost,BufNewFile *.lean imap \> ⟩
au BufReadPost,BufNewFile *.lean imap \\| ∣
au BufReadPost,BufNewFile *.lean imap \not ¬
au BufReadPost,BufNewFile *.lean imap \prod ×
au BufReadPost,BufNewFile *.lean imap \Pi Π
au BufReadPost,BufNewFile *.lean imap \in ∈
au BufReadPost,BufNewFile *.lean imap \cdot •
au BufReadPost,BufNewFile *.lean imap \circ ∘
au BufReadPost,BufNewFile *.lean imap \comp ℂ
au BufReadPost,BufNewFile *.lean imap \real ℝ
au BufReadPost,BufNewFile *.lean imap \inv ⁻¹
au BufReadPost,BufNewFile *.lean imap \scap ⊓
au BufReadPost,BufNewFile *.lean imap \scup ⊔
au BufReadPost,BufNewFile *.lean imap \lto →ₗ

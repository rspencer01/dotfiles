#!/usr/bin/env python3

import argparse
import base64
import datetime
import enum
import plistlib
import os
import random
import subprocess
import tempfile
import sys

from PIL import Image

random.seed(datetime.datetime.now().strftime("%Y-%m-%d"))


class Mode(enum.Enum):
    LIGHT = 0
    DARK = 1


def call_silent(cmd):
    return subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)


parser = argparse.ArgumentParser()
parser.add_argument("image", type=str, help="image file or path to image directory")
parser.add_argument("path_to_polybar", type=str, help="path to polybar config file")

args = parser.parse_args()

# Select a random image from the tree if we are given a directory

while not os.path.isfile(args.image):
    args.image = os.path.join(args.image, random.choice(os.listdir(args.image)))

# Extract a single image from a HEIC file

if args.image[-4:] == "heic":
    r = subprocess.run(["exiftool", args.image], stdout=subprocess.PIPE)
    output = r.stdout.decode("utf-8")
    exif = {
        line.split(":")[0].strip(): line.split(":")[1].strip()
        for line in output.split("\n")[:-1]
    }
    if "H24" not in exif:
        sys.stderr.write("HEIC file without H24 attribute\n")
        exit(1)
    imgs = plistlib.loads(base64.b64decode(exif["H24"]))["ti"]
    time = datetime.datetime.now()
    time = time.hour / 24.0 + time.minute / (24 * 60)
    mx = (-1, 0)
    for imgs in imgs:
        if imgs["t"] < time and imgs["t"] > mx[0]:
            mx = (imgs["t"], imgs["i"])
    # TODO(robert) use TemporaryDirectory
    tmpdirname = "/tmp"
    if not os.path.isfile("/tmp/background.sha256"):
        open("/tmp/background.sha256", "wb").write(b"")
    sha = open("/tmp/background.sha256", "rb").read()
    r = subprocess.run(["sha256sum", "-b", args.image], stdout=subprocess.PIPE)
    output = r.stdout
    if sha != output:
        call_silent(
            [
                "/usr/local/bin/heif-convert",
                "-q",
                "100",
                args.image,
                os.path.join(tmpdirname, "wallpaper.jpg"),
            ]
        )
        open("/tmp/background.sha256", "wb").write(output)
    args.image = os.path.join(tmpdirname, f"wallpaper-{mx[1]+1}.jpg")

# Determine if we are in a light or dark theme

mode = Mode.DARK

img = Image.open(args.image)
img.thumbnail((20, 20))
if sum(map(sum, list(img.getdata())[:20])) > 100 * 3 * 20:
    mode = Mode.LIGHT

# Set the polybar configuration to point to the right colours

reload_polybar = False

if mode == Mode.DARK:
    from_colour = "colours_dark"
    to_colour = "colours_light"
else:
    from_colour = "colours_light"
    to_colour = "colours_dark"

proc = call_silent(["grep", from_colour, args.path_to_polybar])
if proc == 0:
    call_silent(
        ["sed", "-iE", "s/{}/{}/".format(from_colour, to_colour), args.path_to_polybar]
    )

# Set the background

call_silent(["feh", "--bg-fill", "--no-fehbg", args.image])
